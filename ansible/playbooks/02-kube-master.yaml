- name: Add Kubernetes apt repo
  hosts: k8s
  become: true
  tasks:
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present
        update_cache: yes

    - name: Add Kubernetes apt repository (official pkgs.k8s.io)
      shell: |
        mkdir -p /etc/apt/keyrings
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" > /etc/apt/sources.list.d/kubernetes.list
      args:
        creates: /etc/apt/sources.list.d/kubernetes.list

    - name: Update apt cache
      apt:
        update_cache: yes

- name: Initialize kubeadm control-plane
  hosts: masters
  become: true
  tasks:
    - name: Install kube packages
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present

    - name: kubeadm init (run once)
      command: kubeadm init --pod-network-cidr={{ pod_network_cidr }}
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_init
      run_once: true

    - name: Ensure .kube dir
      file:
        path: /home/{{ ansible_user }}/.kube
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0700

    - name: Copy admin.conf to user kubeconfig
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/{{ ansible_user }}/.kube/config
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'
        remote_src: true

    - name: Generate join token
      command: kubeadm token create
      register: join_token
      run_once: true

    - name: Get current CA cert hash
      shell: |
        openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt \
        | openssl rsa -pubin -outform der 2>/dev/null \
        | openssl dgst -sha256 -hex \
        | sed 's/^.* //'
      register: ca_hash
      changed_when: false
      run_once: true

    - name: Write final join command script with sudo and verbosity
      copy:
        dest: /tmp/join-command.sh
        content: |
          kubeadm join 10.10.0.38:6443 \
            --token {{ join_token.stdout }} \
            --discovery-token-ca-cert-hash sha256:{{ ca_hash.stdout }} \
            -v=6
        mode: '0755'
      run_once: true

    - name: Fetch join-command.sh from master to local
      fetch:
        src: /tmp/join-command.sh
        dest: ./artifacts/join-command.sh
        flat: yes
      run_once: true
